// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: depot/agent/v1/claude.proto

package agentv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadClaudeSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId       string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	SessionData     []byte  `protobuf:"bytes,2,opt,name=session_data,json=sessionData,proto3" json:"session_data,omitempty"`
	OrganizationId  *string `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3,oneof" json:"organization_id,omitempty"`
	Summary         *string `protobuf:"bytes,4,opt,name=summary,proto3,oneof" json:"summary,omitempty"`
	ClaudeSessionId string  `protobuf:"bytes,5,opt,name=claude_session_id,json=claudeSessionId,proto3" json:"claude_session_id,omitempty"`
}

func (x *UploadClaudeSessionRequest) Reset() {
	*x = UploadClaudeSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depot_agent_v1_claude_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadClaudeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadClaudeSessionRequest) ProtoMessage() {}

func (x *UploadClaudeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depot_agent_v1_claude_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadClaudeSessionRequest.ProtoReflect.Descriptor instead.
func (*UploadClaudeSessionRequest) Descriptor() ([]byte, []int) {
	return file_depot_agent_v1_claude_proto_rawDescGZIP(), []int{0}
}

func (x *UploadClaudeSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UploadClaudeSessionRequest) GetSessionData() []byte {
	if x != nil {
		return x.SessionData
	}
	return nil
}

func (x *UploadClaudeSessionRequest) GetOrganizationId() string {
	if x != nil && x.OrganizationId != nil {
		return *x.OrganizationId
	}
	return ""
}

func (x *UploadClaudeSessionRequest) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *UploadClaudeSessionRequest) GetClaudeSessionId() string {
	if x != nil {
		return x.ClaudeSessionId
	}
	return ""
}

type UploadClaudeSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionUrl string `protobuf:"bytes,1,opt,name=session_url,json=sessionUrl,proto3" json:"session_url,omitempty"`
}

func (x *UploadClaudeSessionResponse) Reset() {
	*x = UploadClaudeSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depot_agent_v1_claude_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadClaudeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadClaudeSessionResponse) ProtoMessage() {}

func (x *UploadClaudeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depot_agent_v1_claude_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadClaudeSessionResponse.ProtoReflect.Descriptor instead.
func (*UploadClaudeSessionResponse) Descriptor() ([]byte, []int) {
	return file_depot_agent_v1_claude_proto_rawDescGZIP(), []int{1}
}

func (x *UploadClaudeSessionResponse) GetSessionUrl() string {
	if x != nil {
		return x.SessionUrl
	}
	return ""
}

type DownloadClaudeSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string  `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	OrganizationId *string `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3,oneof" json:"organization_id,omitempty"`
}

func (x *DownloadClaudeSessionRequest) Reset() {
	*x = DownloadClaudeSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depot_agent_v1_claude_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadClaudeSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadClaudeSessionRequest) ProtoMessage() {}

func (x *DownloadClaudeSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depot_agent_v1_claude_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadClaudeSessionRequest.ProtoReflect.Descriptor instead.
func (*DownloadClaudeSessionRequest) Descriptor() ([]byte, []int) {
	return file_depot_agent_v1_claude_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadClaudeSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *DownloadClaudeSessionRequest) GetOrganizationId() string {
	if x != nil && x.OrganizationId != nil {
		return *x.OrganizationId
	}
	return ""
}

type DownloadClaudeSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionData     []byte  `protobuf:"bytes,1,opt,name=session_data,json=sessionData,proto3" json:"session_data,omitempty"`
	Summary         *string `protobuf:"bytes,2,opt,name=summary,proto3,oneof" json:"summary,omitempty"`
	ClaudeSessionId string  `protobuf:"bytes,3,opt,name=claude_session_id,json=claudeSessionId,proto3" json:"claude_session_id,omitempty"`
}

func (x *DownloadClaudeSessionResponse) Reset() {
	*x = DownloadClaudeSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depot_agent_v1_claude_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadClaudeSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadClaudeSessionResponse) ProtoMessage() {}

func (x *DownloadClaudeSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depot_agent_v1_claude_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadClaudeSessionResponse.ProtoReflect.Descriptor instead.
func (*DownloadClaudeSessionResponse) Descriptor() ([]byte, []int) {
	return file_depot_agent_v1_claude_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadClaudeSessionResponse) GetSessionData() []byte {
	if x != nil {
		return x.SessionData
	}
	return nil
}

func (x *DownloadClaudeSessionResponse) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

func (x *DownloadClaudeSessionResponse) GetClaudeSessionId() string {
	if x != nil {
		return x.ClaudeSessionId
	}
	return ""
}

type ListClaudeSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrganizationId *string `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3,oneof" json:"organization_id,omitempty"`
	PageSize       *int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	PageToken      *string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"`
}

func (x *ListClaudeSessionsRequest) Reset() {
	*x = ListClaudeSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depot_agent_v1_claude_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClaudeSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClaudeSessionsRequest) ProtoMessage() {}

func (x *ListClaudeSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_depot_agent_v1_claude_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClaudeSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListClaudeSessionsRequest) Descriptor() ([]byte, []int) {
	return file_depot_agent_v1_claude_proto_rawDescGZIP(), []int{4}
}

func (x *ListClaudeSessionsRequest) GetOrganizationId() string {
	if x != nil && x.OrganizationId != nil {
		return *x.OrganizationId
	}
	return ""
}

func (x *ListClaudeSessionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListClaudeSessionsRequest) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type ListClaudeSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sessions      []*ClaudeSession `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	NextPageToken *string          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3,oneof" json:"next_page_token,omitempty"`
}

func (x *ListClaudeSessionsResponse) Reset() {
	*x = ListClaudeSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depot_agent_v1_claude_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClaudeSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClaudeSessionsResponse) ProtoMessage() {}

func (x *ListClaudeSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_depot_agent_v1_claude_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClaudeSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListClaudeSessionsResponse) Descriptor() ([]byte, []int) {
	return file_depot_agent_v1_claude_proto_rawDescGZIP(), []int{5}
}

func (x *ListClaudeSessionsResponse) GetSessions() []*ClaudeSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListClaudeSessionsResponse) GetNextPageToken() string {
	if x != nil && x.NextPageToken != nil {
		return *x.NextPageToken
	}
	return ""
}

type ClaudeSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Summary   *string                `protobuf:"bytes,4,opt,name=summary,proto3,oneof" json:"summary,omitempty"`
}

func (x *ClaudeSession) Reset() {
	*x = ClaudeSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_depot_agent_v1_claude_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaudeSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaudeSession) ProtoMessage() {}

func (x *ClaudeSession) ProtoReflect() protoreflect.Message {
	mi := &file_depot_agent_v1_claude_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaudeSession.ProtoReflect.Descriptor instead.
func (*ClaudeSession) Descriptor() ([]byte, []int) {
	return file_depot_agent_v1_claude_proto_rawDescGZIP(), []int{6}
}

func (x *ClaudeSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ClaudeSession) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ClaudeSession) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ClaudeSession) GetSummary() string {
	if x != nil && x.Summary != nil {
		return *x.Summary
	}
	return ""
}

var File_depot_agent_v1_claude_proto protoreflect.FileDescriptor

var file_depot_agent_v1_claude_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64,
	0x65, 0x70, 0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7,
	0x01, 0x0a, 0x1a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2c, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x3e, 0x0a, 0x1b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x7f, 0x0a, 0x1c, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x1d, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x61, 0x75, 0x64, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xc0, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6f,
	0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x75, 0x64,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xcf, 0x01, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x32, 0xe2, 0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x15, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a,
	0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb2, 0x01, 0x0a, 0x12, 0x63,
	0x6f, 0x6d, 0x2e, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x42, 0x0b, 0x43, 0x6c, 0x61, 0x75, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x70,
	0x6f, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x64, 0x65, 0x70, 0x6f, 0x74, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x41, 0x58, 0xaa, 0x02, 0x0e,
	0x44, 0x65, 0x70, 0x6f, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0e, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x5c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x1a, 0x44, 0x65, 0x70, 0x6f, 0x74, 0x5c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x44,
	0x65, 0x70, 0x6f, 0x74, 0x3a, 0x3a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_depot_agent_v1_claude_proto_rawDescOnce sync.Once
	file_depot_agent_v1_claude_proto_rawDescData = file_depot_agent_v1_claude_proto_rawDesc
)

func file_depot_agent_v1_claude_proto_rawDescGZIP() []byte {
	file_depot_agent_v1_claude_proto_rawDescOnce.Do(func() {
		file_depot_agent_v1_claude_proto_rawDescData = protoimpl.X.CompressGZIP(file_depot_agent_v1_claude_proto_rawDescData)
	})
	return file_depot_agent_v1_claude_proto_rawDescData
}

var file_depot_agent_v1_claude_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_depot_agent_v1_claude_proto_goTypes = []interface{}{
	(*UploadClaudeSessionRequest)(nil),    // 0: depot.agent.v1.UploadClaudeSessionRequest
	(*UploadClaudeSessionResponse)(nil),   // 1: depot.agent.v1.UploadClaudeSessionResponse
	(*DownloadClaudeSessionRequest)(nil),  // 2: depot.agent.v1.DownloadClaudeSessionRequest
	(*DownloadClaudeSessionResponse)(nil), // 3: depot.agent.v1.DownloadClaudeSessionResponse
	(*ListClaudeSessionsRequest)(nil),     // 4: depot.agent.v1.ListClaudeSessionsRequest
	(*ListClaudeSessionsResponse)(nil),    // 5: depot.agent.v1.ListClaudeSessionsResponse
	(*ClaudeSession)(nil),                 // 6: depot.agent.v1.ClaudeSession
	(*timestamppb.Timestamp)(nil),         // 7: google.protobuf.Timestamp
}
var file_depot_agent_v1_claude_proto_depIdxs = []int32{
	6, // 0: depot.agent.v1.ListClaudeSessionsResponse.sessions:type_name -> depot.agent.v1.ClaudeSession
	7, // 1: depot.agent.v1.ClaudeSession.updated_at:type_name -> google.protobuf.Timestamp
	7, // 2: depot.agent.v1.ClaudeSession.created_at:type_name -> google.protobuf.Timestamp
	0, // 3: depot.agent.v1.ClaudeService.UploadClaudeSession:input_type -> depot.agent.v1.UploadClaudeSessionRequest
	2, // 4: depot.agent.v1.ClaudeService.DownloadClaudeSession:input_type -> depot.agent.v1.DownloadClaudeSessionRequest
	4, // 5: depot.agent.v1.ClaudeService.ListClaudeSessions:input_type -> depot.agent.v1.ListClaudeSessionsRequest
	1, // 6: depot.agent.v1.ClaudeService.UploadClaudeSession:output_type -> depot.agent.v1.UploadClaudeSessionResponse
	3, // 7: depot.agent.v1.ClaudeService.DownloadClaudeSession:output_type -> depot.agent.v1.DownloadClaudeSessionResponse
	5, // 8: depot.agent.v1.ClaudeService.ListClaudeSessions:output_type -> depot.agent.v1.ListClaudeSessionsResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_depot_agent_v1_claude_proto_init() }
func file_depot_agent_v1_claude_proto_init() {
	if File_depot_agent_v1_claude_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_depot_agent_v1_claude_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadClaudeSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depot_agent_v1_claude_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadClaudeSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depot_agent_v1_claude_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadClaudeSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depot_agent_v1_claude_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadClaudeSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depot_agent_v1_claude_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClaudeSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depot_agent_v1_claude_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClaudeSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_depot_agent_v1_claude_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaudeSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_depot_agent_v1_claude_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_depot_agent_v1_claude_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_depot_agent_v1_claude_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_depot_agent_v1_claude_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_depot_agent_v1_claude_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_depot_agent_v1_claude_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_depot_agent_v1_claude_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_depot_agent_v1_claude_proto_goTypes,
		DependencyIndexes: file_depot_agent_v1_claude_proto_depIdxs,
		MessageInfos:      file_depot_agent_v1_claude_proto_msgTypes,
	}.Build()
	File_depot_agent_v1_claude_proto = out.File
	file_depot_agent_v1_claude_proto_rawDesc = nil
	file_depot_agent_v1_claude_proto_goTypes = nil
	file_depot_agent_v1_claude_proto_depIdxs = nil
}
