project_name: depot

release:
  name_template: "Depot CLI {{.Version}}"
  prerelease: auto

before:
  hooks:
    - go mod tidy

builds:
  - <<: &build_defaults
      binary: bin/depot
      main: ./cmd/depot
      ldflags:
        - -s -w -X github.com/depot/cli/internal/build.Version={{.Version}} -X github.com/depot/cli/internal/build.Date={{time "2006-01-02"}} -X github.com/depot/cli/internal/build.SentryEnvironment=release
    id: macos
    goos: [darwin]
    goarch: [amd64, arm64]
    env:
      - CGO_ENABLED=0

  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: ["386", arm, amd64, arm64]
    env:
      - CGO_ENABLED=0

  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: ["386", arm, amd64, arm64]
    env:
      - CGO_ENABLED=0

archives:
  - id: nix
    builds: [macos, linux]
    format: tar.gz

changelog:
  skip: true

brews:
  - repository:
      owner: depot
      name: homebrew-tap
    commit_author:
      name: depot-bot
      email: automation@depot.dev
    homepage: https://depot.dev
    description: The official CLI for Depot.
    license: MIT
    skip_upload: auto
    install: |
      bin.install "bin/depot"

      bash_comp = Utils.safe_popen_read("#{bin}/depot", "completion", "bash")
      fish_comp = Utils.safe_popen_read("#{bin}/depot", "completion", "fish")
      zsh_comp = Utils.safe_popen_read("#{bin}/depot", "completion", "zsh")

      (bash_completion/"depot").write bash_comp
      (fish_completion/"depot.fish").write fish_comp
      (zsh_completion/"_depot").write zsh_comp
    test: |
      system "#{bin}/depot version"
